<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd     
	       http://www.springframework.org/schema/context
	       http://www.springframework.org/schema/context/spring-context-2.5.xsd   
           http://www.springframework.org/schema/jee 
           http://www.springframework.org/schema/jee/spring-jee-2.5.xsd    
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">


	<!--        //////////////////////////////////////        Integração do Spring com o Hibernate        //////////////////////////////////////    -->


	<!--        Carregamento do Arquivo de Configuracoes do JDBC    -->
	<context:property-placeholder location="classpath:jdbc.properties" />


	<!--        Configuracao do DataSource    -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
	</bean>


	<!--        Hibernate SessionFactory    -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>

		<!-- Carrega todos os HBM's -->
		<property name="mappingDirectoryLocations">
			<list>
				<value>
					classpath:com/myorg/model/repository/hibernate/hbm

				</value>
			</list>
		</property>

		<!-- Configuracoes do Hibernate -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.PostgreSQLDialect
				</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.max_fetch_depth">20</prop>
				<prop key="hibernate.jdbc.batch_size">20</prop>
			</props>
		</property>

		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean
						class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
				</entry>
			</map>
		</property>

	</bean>

	<!--        Transaction Manager    -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<!-- Habilita os Services para serem transicionais via a Annotation @Transactional -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!-- ============================== AOP DEFINITIONS ================================ -->
	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

	<!--        Activates various annotations to be detected in bean classes:  
		Spring's @Required and @Autowired, as well as JSR 250's @Resource.    -->
	<context:annotation-config />

	<!-- Carrega os Beans de Servico -->
	<context:component-scan base-package="com.myorg.model.service" />

	<!-- Carrega os Beans DAO Hibernate -->
	<context:component-scan
		base-package="com.myorg.model.repository.hibernate" />

<context:component-scan
		base-package="teste" />

 	<aop:aspectj-autoproxy proxy-target-class="true" />
</beans>

